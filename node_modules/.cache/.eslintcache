[{"C:\\Users\\Yuri Lima\\Documents\\Web\\PIW2023.1\\projects\\src\\index.js":"1","C:\\Users\\Yuri Lima\\Documents\\Web\\PIW2023.1\\projects\\src\\App.js":"2","C:\\Users\\Yuri Lima\\Documents\\Web\\PIW2023.1\\projects\\src\\reportWebVitals.js":"3","C:\\Users\\Yuri Lima\\Documents\\Web\\PIW2023.1\\projects\\src\\components\\14MUI\\02CRUD\\MainPage.jsx":"4","C:\\Users\\Yuri Lima\\Documents\\Web\\PIW2023.1\\projects\\src\\components\\14MUI\\02CRUD\\MyMenuV1.jsx":"5","C:\\Users\\Yuri Lima\\Documents\\Web\\PIW2023.1\\projects\\src\\components\\14MUI\\02CRUD\\professor\\Editar.jsx":"6","C:\\Users\\Yuri Lima\\Documents\\Web\\PIW2023.1\\projects\\src\\components\\14MUI\\02CRUD\\professor\\Cadastrar.jsx":"7","C:\\Users\\Yuri Lima\\Documents\\Web\\PIW2023.1\\projects\\src\\components\\14MUI\\02CRUD\\professor\\Listar.jsx":"8","C:\\Users\\Yuri Lima\\Documents\\Web\\PIW2023.1\\projects\\src\\components\\14MUI\\02CRUD\\aluno\\Editar.jsx":"9","C:\\Users\\Yuri Lima\\Documents\\Web\\PIW2023.1\\projects\\src\\components\\14MUI\\02CRUD\\aluno\\Cadastrar.jsx":"10","C:\\Users\\Yuri Lima\\Documents\\Web\\PIW2023.1\\projects\\src\\components\\14MUI\\02CRUD\\aluno\\Listar.jsx":"11"},{"size":552,"mtime":1685367456898,"results":"12","hashOfConfig":"13"},{"size":3597,"mtime":1687434920770,"results":"14","hashOfConfig":"13"},{"size":375,"mtime":1685367456899,"results":"15","hashOfConfig":"13"},{"size":1193,"mtime":1687439822148,"results":"16","hashOfConfig":"13"},{"size":4185,"mtime":1687439654516,"results":"17","hashOfConfig":"13"},{"size":6146,"mtime":1687434705370,"results":"18","hashOfConfig":"13"},{"size":5720,"mtime":1687434705370,"results":"19","hashOfConfig":"13"},{"size":4951,"mtime":1687434705371,"results":"20","hashOfConfig":"13"},{"size":4892,"mtime":1687630209236,"results":"21","hashOfConfig":"13"},{"size":4492,"mtime":1687629990813,"results":"22","hashOfConfig":"13"},{"size":4175,"mtime":1687630256461,"results":"23","hashOfConfig":"13"},{"filePath":"24","messages":"25","suppressedMessages":"26","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"27"},"inw0we",{"filePath":"28","messages":"29","suppressedMessages":"30","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"27"},{"filePath":"31","messages":"32","suppressedMessages":"33","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"27"},{"filePath":"34","messages":"35","suppressedMessages":"36","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"37","messages":"38","suppressedMessages":"39","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"40","messages":"41","suppressedMessages":"42","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"43","usedDeprecatedRules":"27"},{"filePath":"44","messages":"45","suppressedMessages":"46","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47","usedDeprecatedRules":"27"},{"filePath":"48","messages":"49","suppressedMessages":"50","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51","usedDeprecatedRules":"27"},{"filePath":"52","messages":"53","suppressedMessages":"54","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"55","messages":"56","suppressedMessages":"57","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"58","messages":"59","suppressedMessages":"60","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\Yuri Lima\\Documents\\Web\\PIW2023.1\\projects\\src\\index.js",[],[],[],"C:\\Users\\Yuri Lima\\Documents\\Web\\PIW2023.1\\projects\\src\\App.js",[],[],"C:\\Users\\Yuri Lima\\Documents\\Web\\PIW2023.1\\projects\\src\\reportWebVitals.js",[],[],"C:\\Users\\Yuri Lima\\Documents\\Web\\PIW2023.1\\projects\\src\\components\\14MUI\\02CRUD\\MainPage.jsx",[],[],"C:\\Users\\Yuri Lima\\Documents\\Web\\PIW2023.1\\projects\\src\\components\\14MUI\\02CRUD\\MyMenuV1.jsx",[],[],"C:\\Users\\Yuri Lima\\Documents\\Web\\PIW2023.1\\projects\\src\\components\\14MUI\\02CRUD\\professor\\Editar.jsx",["61"],[],"import { Box, Button, Checkbox, FormControl, FormControlLabel, FormGroup, FormLabel, InputLabel, MenuItem, Select, TextField, Typography } from \"@mui/material\"\r\nimport axios from \"axios\"\r\nimport { useEffect } from \"react\"\r\nimport { useState } from \"react\"\r\nimport { useParams, useNavigate } from \"react-router-dom\"\r\n\r\nconst Editar = () => {\r\n\r\n    const [nome, setNome] = useState(\"\")\r\n    const [curso, setCurso] = useState(\"\")\r\n    const [titulacao, setTitulacao] = useState(\"GRAD\")\r\n    const [ai, setAi] = useState({ ds: false, es: false, mc: false, cg: false })\r\n\r\n    const { ds, es, mc, cg } = ai\r\n    const { id } = useParams()\r\n    const navigate = useNavigate()\r\n    \r\n\r\n    /*const professores = [\r\n        { id: 0, nome: \"Gladimir Bavares\", curso: \"DD\", titulacao: \"GRAD\", ai:{ds:true,es:true,mc:false,cg:false} },\r\n        { id: 1, nome: \"Tainara Zaia\", curso: \"DD\", titulacao: \"DOUT\", ai:{ds:true,es:true,mc:false,cg:false} },\r\n        { id: 2, nome: \"Saulo Bitor\", curso: \"ES\", titulacao: \"GRAD\", ai:{ds:true,es:true,mc:false,cg:false} },\r\n        { id: 3, nome: \"Zictor Zarias\", curso: \"CC\", titulacao: \"MEST\", ai:{ds:true,es:true,mc:false,cg:false} },\r\n        { id: 4, nome: \"Angrid Vonteiro\", curso: \"CC\", titulacao: \"DOUT\", ai:{ds:true,es:true,mc:false,cg:false} },\r\n    ]\r\n\r\n    function getProfessorById(id){\r\n        for(let i=0;i<professores.length;i++)\r\n            if(professores[i].id == id){\r\n                return professores[i]\r\n            }\r\n        return null\r\n    }*/\r\n\r\n    useEffect(\r\n        () => {\r\n\r\n            axios.get(`http://localhost:3001/professores/recuperar/${id}`)\r\n                .then(\r\n                    (response) => {\r\n                        setNome(response.data.nome)\r\n                        setCurso(response.data.curso)\r\n                        setTitulacao(response.data.titulacao)\r\n                        setAi(response.data.ai)\r\n                    }\r\n                )\r\n                .catch(error => console.log(error))\r\n\r\n            /*const professor = getProfessorById(id)\r\n            setNome(professor.nome)\r\n            setCurso(professor.curso)\r\n            setTitulacao(professor.titulacao)\r\n            setAi(professor.ai)*/\r\n\r\n        }\r\n        ,\r\n        []\r\n    )\r\n\r\n    function handleSubmit(event) {\r\n        event.preventDefault()\r\n        /*console.log(nome)\r\n        console.log(curso)\r\n        console.log(titulacao)\r\n        console.log(ai)*/\r\n        const professor = {nome,curso,titulacao,ai}\r\n        axios.put(`http://localhost:3001/professores/atualizar/${id}`,professor)\r\n        .then(\r\n            (response) => {\r\n                alert(\"Professor \" + response.data.id + \" atualizado com sucesso!\")\r\n                navigate(\"/listarProfessor\")\r\n            }\r\n        )\r\n        .catch(error=>console.log(error))\r\n    }\r\n\r\n    function handleCheckBox(event) {\r\n        setAi(\r\n            {\r\n                ...ai, //copia todo mundo que estava antes\r\n                [event.target.name]: event.target.checked //modifica apenas a propriedade clicada\r\n            }\r\n        )\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Typography variant=\"h4\" fontWeight=\"bold\">\r\n                Editar Professor {id}\r\n            </Typography>\r\n\r\n            <Box\r\n                component=\"form\"\r\n                onSubmit={handleSubmit}\r\n            >\r\n                <TextField\r\n                    margin=\"normal\"\r\n                    required\r\n                    fullWidth\r\n                    id=\"nome\"\r\n                    label=\"Nome Completo\"\r\n                    name=\"nome\"\r\n                    onChange={(event) => setNome(event.target.value)}\r\n                    value={nome}\r\n                />\r\n                <TextField\r\n                    margin=\"normal\"\r\n                    required\r\n                    fullWidth\r\n                    id=\"curso\"\r\n                    label=\"Curso\"\r\n                    name=\"curso\"\r\n                    onChange={(event) => setCurso(event.target.value)}\r\n                    value={curso}\r\n                />\r\n\r\n                <FormControl sx={{ width: \"100%\", mt: 2 }}>\r\n                    <InputLabel id=\"select-id-label\">Titulação</InputLabel>\r\n                    <Select\r\n                        labelId=\"select-id-label\"\r\n                        label=\"Titulação\"\r\n                        value={titulacao}\r\n                        onChange={(event) => setTitulacao(event.target.value)}\r\n                    >\r\n                        <MenuItem value=\"GRAD\">Graduação</MenuItem>\r\n                        <MenuItem value=\"MEST\">Mestrado</MenuItem>\r\n                        <MenuItem value=\"DOUT\">Doutorado</MenuItem>\r\n                    </Select>\r\n                </FormControl>\r\n\r\n                <FormControl sx={{ mt: 2, ml: 2 }} component=\"fieldset\" variant=\"standard\">\r\n                    <FormLabel component=\"legend\" sx={{ fontSize: 12, mb: 2 }}>Áreas de Interesse</FormLabel>\r\n                    <FormGroup>\r\n                        <FormControlLabel control={<Checkbox checked={ds} name=\"ds\" onChange={handleCheckBox} />} label=\"Desenvolvimento de Software\" />\r\n                        <FormControlLabel control={<Checkbox checked={es} name=\"es\" onChange={handleCheckBox} />} label=\"Engenharia de Software\" />\r\n                        <FormControlLabel control={<Checkbox checked={mc} name=\"mc\" onChange={handleCheckBox} />} label=\"Matemática Computacional\" />\r\n                        <FormControlLabel control={<Checkbox checked={cg} name=\"cg\" onChange={handleCheckBox} />} label=\"Computação Gráfica\" />\r\n                    </FormGroup>\r\n                </FormControl>\r\n\r\n                <Box sx={{\r\n                    display: \"flex\",\r\n                    justifyContent: \"center\",\r\n                    mt: 2\r\n                }}>\r\n                    <Button\r\n                        variant=\"contained\"\r\n                        type=\"submit\"\r\n                        sx={{ mb: 2 }}\r\n                    >\r\n                        Atualizar\r\n                    </Button>\r\n                </Box>\r\n            </Box>\r\n        </>\r\n    )\r\n}\r\nexport default Editar","C:\\Users\\Yuri Lima\\Documents\\Web\\PIW2023.1\\projects\\src\\components\\14MUI\\02CRUD\\professor\\Cadastrar.jsx",["62","63","64","65"],[],"import { Box, Button, Checkbox, FormControl, FormControlLabel, FormGroup, FormLabel, InputLabel, MenuItem, Select, TextField, Typography } from \"@mui/material\"\r\nimport axios from \"axios\"\r\nimport { useState } from \"react\"\r\nimport { useNavigate } from \"react-router-dom\"\r\n\r\nconst Cadastrar = () => {\r\n\r\n    const [nome, setNome] = useState(\"\")\r\n    const [curso, setCurso] = useState(\"\")\r\n    const [ira, setIra] = useState(\"0.0\")\r\n    const [ira2, setIra2] = useState(\"0.0\")\r\n    const [titulacao, setTitulacao] = useState(\"GRAD\")\r\n    const [ai, setAi] = useState({ ds: false, es: false, mc: false, cg: false })\r\n\r\n    const { ds, es, mc, cg } = ai\r\n    const navigate = useNavigate()\r\n\r\n    function handleSubmit(event) {\r\n        event.preventDefault()\r\n        /*console.log(nome)\r\n        console.log(curso)\r\n        console.log(titulacao)\r\n        console.log(ai)*/\r\n        const professor = { nome, curso, titulacao, ai }\r\n        axios.post(\"http://localhost:3001/professores/cadastrar\", professor)\r\n            .then(\r\n                (response) => {\r\n                    alert(\"Professor \" + response.data._id + \" adicionado com sucesso!\")\r\n                    navigate(\"/listarProfessor\")\r\n                }\r\n            )\r\n            .catch(error => console.log(error))\r\n    }\r\n\r\n    function handleCheckBox(event) {\r\n        setAi(\r\n            {\r\n                ...ai, //copia todo mundo que estava antes\r\n                [event.target.name]: event.target.checked //modifica apenas a propriedade clicada\r\n            }\r\n        )\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Typography variant=\"h4\" fontWeight=\"bold\">\r\n                Cadastrar Professor\r\n            </Typography>\r\n\r\n            <Box\r\n                component=\"form\"\r\n                onSubmit={handleSubmit}\r\n            >\r\n                <TextField\r\n                    margin=\"normal\"\r\n                    required\r\n                    fullWidth\r\n                    id=\"nome\"\r\n                    label=\"Nome Completo\"\r\n                    name=\"nome\"\r\n                    onChange={(event) => setNome(event.target.value)}\r\n                />\r\n                <TextField\r\n                    margin=\"normal\"\r\n                    required\r\n                    fullWidth\r\n                    id=\"curso\"\r\n                    label=\"Curso\"\r\n                    name=\"curso\"\r\n                    onChange={(event) => setCurso(event.target.value)}\r\n                />\r\n\r\n                {/* <TextField\r\n                    margin=\"normal\"\r\n                    required\r\n                    fullWidth\r\n                    id=\"ira\"\r\n                    label=\"IRA\"\r\n                    name=\"ira\"\r\n                    type=\"number\"\r\n                    inputProps={{\r\n                        maxLength: 10,\r\n                        step: \"0.1\"\r\n                    }}\r\n                    onChange={(e) => setIra(parseFloat(e.target.value))}\r\n                />\r\n\r\n                <TextField\r\n                    margin=\"normal\"\r\n                    required\r\n                    fullWidth\r\n                    id=\"ira2\"\r\n                    label=\"IRA2\"\r\n                    name=\"ira2\"\r\n                    type=\"number\"\r\n                    inputProps={{\r\n                        maxLength: 10,\r\n                        step: \"0.1\"\r\n                    }}\r\n                    onChange={(e) => setIra2(parseFloat(e.target.value))}\r\n                />\r\n                 <Button\r\n                        variant=\"contained\"\r\n                        onClick={()=>{alert(ira + ira2)}}\r\n                    >\r\n                        Somar\r\n                </Button>\r\n                 */}\r\n                <FormControl sx={{ width: \"100%\", mt: 2 }}>\r\n                    <InputLabel id=\"select-id-label\">Titulação</InputLabel>\r\n                    <Select\r\n                        labelId=\"select-id-label\"\r\n                        label=\"Titulação\"\r\n                        value={titulacao}\r\n                        onChange={(event) => setTitulacao(event.target.value)}\r\n                    >\r\n                        <MenuItem value=\"GRAD\">Graduação</MenuItem>\r\n                        <MenuItem value=\"MEST\">Mestrado</MenuItem>\r\n                        <MenuItem value=\"DOUT\">Doutorado</MenuItem>\r\n                    </Select>\r\n                </FormControl>\r\n\r\n                <FormControl sx={{ mt: 2, ml: 2 }} component=\"fieldset\" variant=\"standard\">\r\n                    <FormLabel component=\"legend\" sx={{ fontSize: 12, mb: 2 }}>Áreas de Interesse</FormLabel>\r\n                    <FormGroup>\r\n                        <FormControlLabel control={<Checkbox checked={ds} name=\"ds\" onChange={handleCheckBox} />} label=\"Desenvolvimento de Software\" />\r\n                        <FormControlLabel control={<Checkbox checked={es} name=\"es\" onChange={handleCheckBox} />} label=\"Engenharia de Software\" />\r\n                        <FormControlLabel control={<Checkbox checked={mc} name=\"mc\" onChange={handleCheckBox} />} label=\"Matemática Computacional\" />\r\n                        <FormControlLabel control={<Checkbox checked={cg} name=\"cg\" onChange={handleCheckBox} />} label=\"Computação Gráfica\" />\r\n                    </FormGroup>\r\n                </FormControl>\r\n\r\n                <Box sx={{\r\n                    display: \"flex\",\r\n                    justifyContent: \"center\",\r\n                    mt: 2\r\n                }}>\r\n                    <Button\r\n                        variant=\"contained\"\r\n                        type=\"submit\"\r\n                    >\r\n                        Cadastrar\r\n                    </Button>\r\n                </Box>\r\n            </Box>\r\n        </>\r\n    )\r\n}\r\nexport default Cadastrar","C:\\Users\\Yuri Lima\\Documents\\Web\\PIW2023.1\\projects\\src\\components\\14MUI\\02CRUD\\professor\\Listar.jsx",["66"],[],"import { Paper, Box, TableContainer, TableHead, Typography, Table, TableBody, TableRow, TableCell } from \"@mui/material\"\r\nimport { styled } from '@mui/material/styles';\r\nimport { tableCellClasses } from '@mui/material/TableCell';\r\nimport IconButton from \"@mui/material/IconButton\"\r\nimport DeleteIcon from \"@mui/icons-material/Delete\"\r\nimport EditIcon from \"@mui/icons-material/Edit\"\r\nimport { Link } from \"react-router-dom\"\r\nimport { useEffect, useState } from \"react\";\r\nimport axios from \"axios\";\r\n\r\nconst Listar = () => {\r\n\r\n    /*const professores = [\r\n        { id: 0, nome: \"Gladimir Bavares\", curso: \"DD\", titulacao: \"GRAD\" },\r\n        { id: 1, nome: \"Tainara Zaia\", curso: \"DD\", titulacao: \"DOUT\" },\r\n        { id: 2, nome: \"Saulo Bitor\", curso: \"ES\", titulacao: \"GRAD\" },\r\n        { id: 3, nome: \"Zictor Zarias\", curso: \"CC\", titulacao: \"MEST\" },\r\n        { id: 4, nome: \"Angrid Vonteiro\", curso: \"CC\", titulacao: \"DOUT\" },\r\n    ]*/\r\n    const [professores,setProfessores] = useState([])\r\n\r\n    useEffect(\r\n        ()=>{\r\n            axios.get(\"http://localhost:3001/professores/listar\")\r\n            .then(\r\n                (response)=>{\r\n                    //console.log(response)\r\n                    setProfessores(response.data)\r\n                }\r\n            )\r\n            .catch(error=>console.log(error))\r\n        }\r\n        ,\r\n        []\r\n    )\r\n\r\n    function deleteProfessorById(id){\r\n        if(window.confirm(\"Deseja Excluir? \" + id)){\r\n            //alert(\"Professor \" + id + \" Excluído!\")\r\n            axios.delete(`http://localhost:3001/professores/remover/${id}`)\r\n            .then(\r\n                (response)=>{\r\n                    const resultado = professores.filter( professor => professor._id != id)\r\n                    setProfessores(resultado)\r\n                }\r\n            )\r\n            .catch(error=>console.log(error))\r\n        }\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Typography variant=\"h4\" fontWeight=\"bold\">\r\n                Listar Professor\r\n            </Typography>\r\n            <TableContainer component={Paper} sx={{ mt: 2, mb: 2 }}>\r\n                <Table>\r\n                    <TableHead>\r\n                        <TableRow>\r\n                            <StyledTableCell>ID</StyledTableCell>\r\n                            <StyledTableCell>NOME</StyledTableCell>\r\n                            <StyledTableCell>CURSO</StyledTableCell>\r\n                            <StyledTableCell>TITULAÇÃO</StyledTableCell>\r\n                            <StyledTableCell>AÇÕES</StyledTableCell>\r\n                        </TableRow>\r\n                    </TableHead>\r\n                    <TableBody>\r\n                        {\r\n                            professores.map(\r\n                                (professor) => {\r\n                                    return (\r\n                                        <StyledTableRow key={professor._id}>\r\n                                            <StyledTableCell>{professor._id}</StyledTableCell>\r\n                                            <StyledTableCell>{professor.nome}</StyledTableCell>\r\n                                            <StyledTableCell>{professor.curso}</StyledTableCell>\r\n                                            <StyledTableCell>{professor.titulacao}</StyledTableCell>\r\n                                            <StyledTableCell>\r\n                                                <Box>\r\n                                                    <IconButton aria-label=\"edit\" component={Link} to={`/editarProfessor/${professor._id}`}>\r\n                                                        <EditIcon />\r\n                                                    </IconButton>\r\n                                                    <IconButton aria-label=\"delete\" onClick={()=>deleteProfessorById(professor._id)}>\r\n                                                        <DeleteIcon />\r\n                                                    </IconButton>\r\n                                                </Box>\r\n                                            </StyledTableCell>\r\n                                        </StyledTableRow>\r\n                                    )\r\n                                }\r\n                            )\r\n                        }\r\n                    </TableBody>\r\n                </Table>\r\n            </TableContainer>\r\n        </>\r\n    )\r\n}\r\n\r\n\r\nconst StyledTableCell = styled(TableCell)(({ theme }) => ({\r\n    [`&.${tableCellClasses.head}`]: {\r\n        backgroundColor: theme.palette.common.black,\r\n        color: theme.palette.common.white,\r\n    },\r\n    [`&.${tableCellClasses.body}`]: {\r\n        fontSize: 14,\r\n    },\r\n}));\r\n\r\nconst StyledTableRow = styled(TableRow)(({ theme }) => ({\r\n    '&:nth-of-type(odd)': {\r\n        backgroundColor: theme.palette.action.hover,\r\n    },\r\n    // hide last border\r\n    '&:last-child td, &:last-child th': {\r\n        border: 0,\r\n    },\r\n}));\r\n\r\nexport default Listar","C:\\Users\\Yuri Lima\\Documents\\Web\\PIW2023.1\\projects\\src\\components\\14MUI\\02CRUD\\aluno\\Editar.jsx",["67","68","69","70","71"],[],"C:\\Users\\Yuri Lima\\Documents\\Web\\PIW2023.1\\projects\\src\\components\\14MUI\\02CRUD\\aluno\\Cadastrar.jsx",["72","73","74","75"],[],"C:\\Users\\Yuri Lima\\Documents\\Web\\PIW2023.1\\projects\\src\\components\\14MUI\\02CRUD\\aluno\\Listar.jsx",["76"],[],{"ruleId":"77","severity":1,"message":"78","line":57,"column":9,"nodeType":"79","endLine":57,"endColumn":11,"suggestions":"80"},{"ruleId":"81","severity":1,"message":"82","line":10,"column":12,"nodeType":"83","messageId":"84","endLine":10,"endColumn":15},{"ruleId":"81","severity":1,"message":"85","line":10,"column":17,"nodeType":"83","messageId":"84","endLine":10,"endColumn":23},{"ruleId":"81","severity":1,"message":"86","line":11,"column":12,"nodeType":"83","messageId":"84","endLine":11,"endColumn":16},{"ruleId":"81","severity":1,"message":"87","line":11,"column":18,"nodeType":"83","messageId":"84","endLine":11,"endColumn":25},{"ruleId":"88","severity":1,"message":"89","line":43,"column":86,"nodeType":"90","messageId":"91","endLine":43,"endColumn":88},{"ruleId":"81","severity":1,"message":"92","line":1,"column":23,"nodeType":"83","messageId":"84","endLine":1,"endColumn":31},{"ruleId":"81","severity":1,"message":"93","line":1,"column":46,"nodeType":"83","messageId":"84","endLine":1,"endColumn":62},{"ruleId":"81","severity":1,"message":"94","line":1,"column":64,"nodeType":"83","messageId":"84","endLine":1,"endColumn":73},{"ruleId":"81","severity":1,"message":"95","line":1,"column":75,"nodeType":"83","messageId":"84","endLine":1,"endColumn":84},{"ruleId":"77","severity":1,"message":"78","line":23,"column":8,"nodeType":"79","endLine":23,"endColumn":10,"suggestions":"96"},{"ruleId":"81","severity":1,"message":"92","line":1,"column":23,"nodeType":"83","messageId":"84","endLine":1,"endColumn":31},{"ruleId":"81","severity":1,"message":"93","line":1,"column":46,"nodeType":"83","messageId":"84","endLine":1,"endColumn":62},{"ruleId":"81","severity":1,"message":"94","line":1,"column":64,"nodeType":"83","messageId":"84","endLine":1,"endColumn":73},{"ruleId":"81","severity":1,"message":"95","line":1,"column":75,"nodeType":"83","messageId":"84","endLine":1,"endColumn":84},{"ruleId":"88","severity":1,"message":"89","line":26,"column":64,"nodeType":"90","messageId":"91","endLine":26,"endColumn":66},"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'id'. Either include it or remove the dependency array.","ArrayExpression",["97"],"no-unused-vars","'ira' is assigned a value but never used.","Identifier","unusedVar","'setIra' is assigned a value but never used.","'ira2' is assigned a value but never used.","'setIra2' is assigned a value but never used.","eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","'Checkbox' is defined but never used.","'FormControlLabel' is defined but never used.","'FormGroup' is defined but never used.","'FormLabel' is defined but never used.",["98"],{"desc":"99","fix":"100"},{"desc":"99","fix":"101"},"Update the dependencies array to be: [id]",{"range":"102","text":"103"},{"range":"104","text":"103"},[2240,2242],"[id]",[843,845]]