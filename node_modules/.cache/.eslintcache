[{"C:\\Users\\Yuri Lima\\Documents\\PIW\\src\\index.js":"1","C:\\Users\\Yuri Lima\\Documents\\PIW\\src\\reportWebVitals.js":"2","C:\\Users\\Yuri Lima\\Documents\\PIW\\src\\App.js":"3","C:\\Users\\Yuri Lima\\Documents\\PIW\\src\\components\\14MUI\\02CRUD\\MainPage.jsx":"4","C:\\Users\\Yuri Lima\\Documents\\PIW\\src\\components\\14MUI\\02CRUD\\MyMenuV1.jsx":"5","C:\\Users\\Yuri Lima\\Documents\\PIW\\src\\components\\14MUI\\02CRUD\\professor\\Cadastrar.jsx":"6","C:\\Users\\Yuri Lima\\Documents\\PIW\\src\\components\\14MUI\\02CRUD\\professor\\Editar.jsx":"7","C:\\Users\\Yuri Lima\\Documents\\PIW\\src\\components\\14MUI\\02CRUD\\professor\\Listar.jsx":"8"},{"size":535,"mtime":1685366767598,"results":"9","hashOfConfig":"10"},{"size":362,"mtime":1685366768585,"results":"11","hashOfConfig":"10"},{"size":3597,"mtime":1687867092028,"results":"12","hashOfConfig":"10"},{"size":824,"mtime":1687867325595,"results":"13","hashOfConfig":"10"},{"size":5069,"mtime":1687867092031,"results":"14","hashOfConfig":"10"},{"size":8265,"mtime":1687867092036,"results":"15","hashOfConfig":"10"},{"size":6299,"mtime":1687867092037,"results":"16","hashOfConfig":"10"},{"size":3688,"mtime":1687869155316,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","suppressedMessages":"20","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"166e247",{"filePath":"21","messages":"22","suppressedMessages":"23","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"24","messages":"25","suppressedMessages":"26","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"27","messages":"28","suppressedMessages":"29","errorCount":1,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"30","messages":"31","suppressedMessages":"32","errorCount":1,"fatalErrorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"33","usedDeprecatedRules":"34"},{"filePath":"35","messages":"36","suppressedMessages":"37","errorCount":1,"fatalErrorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"38","usedDeprecatedRules":"34"},{"filePath":"39","messages":"40","suppressedMessages":"41","errorCount":1,"fatalErrorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"42","usedDeprecatedRules":"34"},{"filePath":"43","messages":"44","suppressedMessages":"45","errorCount":1,"fatalErrorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\Yuri Lima\\Documents\\PIW\\src\\index.js",[],[],"C:\\Users\\Yuri Lima\\Documents\\PIW\\src\\reportWebVitals.js",[],[],"C:\\Users\\Yuri Lima\\Documents\\PIW\\src\\App.js",[],[],"C:\\Users\\Yuri Lima\\Documents\\PIW\\src\\components\\14MUI\\02CRUD\\MainPage.jsx",["46","47"],[],"C:\\Users\\Yuri Lima\\Documents\\PIW\\src\\components\\14MUI\\02CRUD\\MyMenuV1.jsx",["48"],[],"import { AppBar, Box, Button, Container, Menu, MenuItem, Toolbar, Typography } from \"@mui/material\"\r\nimport AdbIcon from \"@mui/icons-material/Adb\"\r\nimport { useState } from \"react\"\r\nimport { Link } from \"react-router-dom\"\r\n\r\nconst MyMenu = () => {\r\n\r\n    const [anchoElProfessor,setAnchoElProfessor] = useState(null)\r\n<<<<<<< HEAD\r\n=======\r\n    const [anchoElAluno,setAnchoElAluno] = useState(null)\r\n>>>>>>> d2c1fe12ecbeb469b9ed2a1d1a850d040ea27c26\r\n\r\n    function handleOpenProfDropMenu(event) {\r\n        setAnchoElProfessor(event.currentTarget)\r\n    }\r\n\r\n<<<<<<< HEAD\r\n    function handleCloseProdDropMenu() {\r\n        setAnchoElProfessor(null)\r\n    }\r\n\r\n=======\r\n    function handleCloseProfDropMenu() {\r\n        setAnchoElProfessor(null)\r\n    }\r\n\r\n    function handleOpenAlunoDropMenu(event) {\r\n        setAnchoElAluno(event.currentTarget)\r\n    }\r\n\r\n    function handleCloseAlunoDropMenu() {\r\n        setAnchoElAluno(null)\r\n    }\r\n\r\n>>>>>>> d2c1fe12ecbeb469b9ed2a1d1a850d040ea27c26\r\n    function profDropMenu() {\r\n        return (\r\n            <Box>\r\n                <Button \r\n                    sx={{ color: \"white\", mt: 1 }}\r\n                    onClick={handleOpenProfDropMenu}\r\n                >\r\n                    Professores\r\n                </Button>\r\n                <Menu\r\n                    anchorEl={anchoElProfessor}\r\n                    open={Boolean(anchoElProfessor)}\r\n<<<<<<< HEAD\r\n                    onClose={handleCloseProdDropMenu}\r\n                >\r\n                    <MenuItem \r\n                        onClick={handleCloseProdDropMenu}\r\n=======\r\n                    onClose={handleCloseProfDropMenu}\r\n                >\r\n                    <MenuItem \r\n                        onClick={handleCloseProfDropMenu}\r\n>>>>>>> d2c1fe12ecbeb469b9ed2a1d1a850d040ea27c26\r\n                        component={Link}\r\n                        to=\"cadastrarProfessor\"\r\n                    >\r\n                        Cadastrar\r\n                    </MenuItem>\r\n                    <MenuItem\r\n<<<<<<< HEAD\r\n                        onClick={handleCloseProdDropMenu}\r\n=======\r\n                        onClick={handleCloseProfDropMenu}\r\n>>>>>>> d2c1fe12ecbeb469b9ed2a1d1a850d040ea27c26\r\n                        component={Link}\r\n                        to=\"listarProfessor\"\r\n                    >\r\n                        Listar\r\n                    </MenuItem>\r\n                </Menu>\r\n            </Box>\r\n        )\r\n    }\r\n\r\n<<<<<<< HEAD\r\n=======\r\n    function alunoDropMenu(){\r\n        return(\r\n            <Box>\r\n                <Button \r\n                    sx={{color: \"white\", mt: 1}}\r\n                    onClick={handleOpenAlunoDropMenu}\r\n                >\r\n                    Alunos\r\n                </Button>\r\n                <Menu\r\n                    anchorEl={anchoElAluno}\r\n                    open={Boolean(anchoElAluno)}\r\n                    onClose={handleCloseAlunoDropMenu}\r\n                >\r\n                    <MenuItem \r\n                        onClick={handleCloseAlunoDropMenu}\r\n                        component={Link}\r\n                        to=\"cadastrarAluno\"\r\n                    >\r\n                        Cadastrar\r\n                    </MenuItem>\r\n                    <MenuItem\r\n                        onClick={handleCloseAlunoDropMenu}\r\n                        component={Link}\r\n                        to=\"listarAluno\"\r\n                    >\r\n                        Listar\r\n                    </MenuItem>\r\n                </Menu>\r\n            </Box>\r\n        )\r\n    }\r\n\r\n>>>>>>> d2c1fe12ecbeb469b9ed2a1d1a850d040ea27c26\r\n    return (\r\n        <AppBar>\r\n            <Container>\r\n                <Toolbar>\r\n                    <AdbIcon sx={{ mr: 1 }} />\r\n                    <Typography\r\n                        variant=\"h5\"\r\n                        component=\"a\"\r\n                        href=\"/\"\r\n                        sx={{\r\n                            textDecoration: \"none\",\r\n                            color: \"white\",\r\n                            fontFamily: \"monospace\",\r\n                            fontWeight: 800,\r\n                            letterSpacing: \".2rem\"\r\n                        }}\r\n                    >\r\n                        CRUD_V0\r\n                    </Typography>\r\n                    <Box\r\n                        sx={{\r\n                            width: \"100%\",\r\n                            display: \"flex\",\r\n                            justifyContent: \"flex-end\"\r\n                        }}\r\n                    >\r\n                        {profDropMenu()}\r\n<<<<<<< HEAD\r\n                        <Button sx={{ color: \"white\", mt: 1 }}>\r\n                            Alunos\r\n                        </Button>\r\n=======\r\n                        {alunoDropMenu()}\r\n>>>>>>> d2c1fe12ecbeb469b9ed2a1d1a850d040ea27c26\r\n                        <Button sx={{ color: \"white\", mt: 1 }}>\r\n                            Sobre\r\n                        </Button>\r\n                    </Box>\r\n                </Toolbar>\r\n            </Container>\r\n        </AppBar>\r\n    )\r\n}\r\n\r\nexport default MyMenu",[],"C:\\Users\\Yuri Lima\\Documents\\PIW\\src\\components\\14MUI\\02CRUD\\professor\\Cadastrar.jsx",["49"],[],"import { Box, Button, Checkbox, FormControl, FormControlLabel, FormGroup, FormLabel, InputLabel, MenuItem, Select, TextField, Typography } from \"@mui/material\"\r\n<<<<<<< HEAD\r\nimport { useState } from \"react\"\r\n\r\nconst Cadastrar = () => {\r\n\r\n    const [nome,setNome] = useState(\"\")\r\n    const [curso,setCurso] = useState(\"\")\r\n    const [titulacao,setTitulacao] = useState(\"GRAD\")\r\n    const [ai,setAi] = useState({ds:false,es:false,mc:false,cg:false})\r\n    const {ds,es,mc,cg} = ai\r\n\r\n    function handleSubmit(event) {\r\n        event.preventDefault()\r\n        console.log(nome)\r\n        console.log(curso)\r\n        console.log(titulacao)\r\n        console.log(ai)\r\n=======\r\nimport axios from \"axios\"\r\nimport { useState } from \"react\"\r\nimport { useNavigate } from \"react-router-dom\"\r\n\r\nconst Cadastrar = () => {\r\n\r\n    const [nome, setNome] = useState(\"\")\r\n    const [curso, setCurso] = useState(\"\")\r\n    const [ira, setIra] = useState(\"0.0\")\r\n    const [ira2, setIra2] = useState(\"0.0\")\r\n    const [titulacao, setTitulacao] = useState(\"GRAD\")\r\n    const [ai, setAi] = useState({ ds: false, es: false, mc: false, cg: false })\r\n\r\n    const { ds, es, mc, cg } = ai\r\n    const navigate = useNavigate()\r\n\r\n    function handleSubmit(event) {\r\n        event.preventDefault()\r\n        /*console.log(nome)\r\n        console.log(curso)\r\n        console.log(titulacao)\r\n        console.log(ai)*/\r\n        const professor = { nome, curso, titulacao, ai }\r\n        axios.post(\"http://localhost:3001/professores/cadastrar\", professor)\r\n            .then(\r\n                (response) => {\r\n                    alert(\"Professor \" + response.data._id + \" adicionado com sucesso!\")\r\n                    navigate(\"/listarProfessor\")\r\n                }\r\n            )\r\n            .catch(error => console.log(error))\r\n>>>>>>> d2c1fe12ecbeb469b9ed2a1d1a850d040ea27c26\r\n    }\r\n\r\n    function handleCheckBox(event) {\r\n        setAi(\r\n<<<<<<< HEAD\r\n                {\r\n                    ...ai, //copia todo mundo que estava antes\r\n                    [event.target.name]:event.target.checked //modifica apenas a propriedade clicada\r\n                }\r\n        )    \r\n    }\r\n    \r\n=======\r\n            {\r\n                ...ai, //copia todo mundo que estava antes\r\n                [event.target.name]: event.target.checked //modifica apenas a propriedade clicada\r\n            }\r\n        )\r\n    }\r\n\r\n>>>>>>> d2c1fe12ecbeb469b9ed2a1d1a850d040ea27c26\r\n    return (\r\n        <>\r\n            <Typography variant=\"h4\" fontWeight=\"bold\">\r\n                Cadastrar Professor\r\n            </Typography>\r\n<<<<<<< HEAD\r\n            \r\n=======\r\n\r\n>>>>>>> d2c1fe12ecbeb469b9ed2a1d1a850d040ea27c26\r\n            <Box\r\n                component=\"form\"\r\n                onSubmit={handleSubmit}\r\n            >\r\n                <TextField\r\n                    margin=\"normal\"\r\n                    required\r\n                    fullWidth\r\n                    id=\"nome\"\r\n                    label=\"Nome Completo\"\r\n                    name=\"nome\"\r\n<<<<<<< HEAD\r\n                    onChange={(event)=>setNome(event.target.value)}\r\n=======\r\n                    onChange={(event) => setNome(event.target.value)}\r\n>>>>>>> d2c1fe12ecbeb469b9ed2a1d1a850d040ea27c26\r\n                />\r\n                <TextField\r\n                    margin=\"normal\"\r\n                    required\r\n                    fullWidth\r\n                    id=\"curso\"\r\n                    label=\"Curso\"\r\n                    name=\"curso\"\r\n<<<<<<< HEAD\r\n                    onChange={(event)=>setCurso(event.target.value)}\r\n                />\r\n\r\n                <FormControl sx={{width:\"100%\",mt:2}}>\r\n=======\r\n                    onChange={(event) => setCurso(event.target.value)}\r\n                />\r\n\r\n                {/* <TextField\r\n                    margin=\"normal\"\r\n                    required\r\n                    fullWidth\r\n                    id=\"ira\"\r\n                    label=\"IRA\"\r\n                    name=\"ira\"\r\n                    type=\"number\"\r\n                    inputProps={{\r\n                        maxLength: 10,\r\n                        step: \"0.1\"\r\n                    }}\r\n                    onChange={(e) => setIra(parseFloat(e.target.value))}\r\n                />\r\n\r\n                <TextField\r\n                    margin=\"normal\"\r\n                    required\r\n                    fullWidth\r\n                    id=\"ira2\"\r\n                    label=\"IRA2\"\r\n                    name=\"ira2\"\r\n                    type=\"number\"\r\n                    inputProps={{\r\n                        maxLength: 10,\r\n                        step: \"0.1\"\r\n                    }}\r\n                    onChange={(e) => setIra2(parseFloat(e.target.value))}\r\n                />\r\n                 <Button\r\n                        variant=\"contained\"\r\n                        onClick={()=>{alert(ira + ira2)}}\r\n                    >\r\n                        Somar\r\n                </Button>\r\n                 */}\r\n                <FormControl sx={{ width: \"100%\", mt: 2 }}>\r\n>>>>>>> d2c1fe12ecbeb469b9ed2a1d1a850d040ea27c26\r\n                    <InputLabel id=\"select-id-label\">Titulação</InputLabel>\r\n                    <Select\r\n                        labelId=\"select-id-label\"\r\n                        label=\"Titulação\"\r\n                        value={titulacao}\r\n<<<<<<< HEAD\r\n                        onChange={(event)=>setTitulacao(event.target.value)}\r\n=======\r\n                        onChange={(event) => setTitulacao(event.target.value)}\r\n>>>>>>> d2c1fe12ecbeb469b9ed2a1d1a850d040ea27c26\r\n                    >\r\n                        <MenuItem value=\"GRAD\">Graduação</MenuItem>\r\n                        <MenuItem value=\"MEST\">Mestrado</MenuItem>\r\n                        <MenuItem value=\"DOUT\">Doutorado</MenuItem>\r\n                    </Select>\r\n                </FormControl>\r\n\r\n<<<<<<< HEAD\r\n                <FormControl sx={{mt:2,ml:2}} component=\"fieldset\" variant=\"standard\">\r\n                    <FormLabel component=\"legend\" sx={{fontSize:12,mb:2}}>Áreas de Interesse</FormLabel>\r\n                    <FormGroup>\r\n                        <FormControlLabel control={<Checkbox checked={ds} name=\"ds\" onChange={handleCheckBox}/>} label=\"Desenvolvimento de Software\"/>\r\n                        <FormControlLabel control={<Checkbox checked={es} name=\"es\" onChange={handleCheckBox}/>} label=\"Engenharia de Software\"/>\r\n                        <FormControlLabel control={<Checkbox checked={mc} name=\"mc\" onChange={handleCheckBox}/>} label=\"Matemática Computacional\"/>\r\n                        <FormControlLabel control={<Checkbox checked={cg} name=\"cg\" onChange={handleCheckBox}/>} label=\"Computação Gráfica\"/>\r\n=======\r\n                <FormControl sx={{ mt: 2, ml: 2 }} component=\"fieldset\" variant=\"standard\">\r\n                    <FormLabel component=\"legend\" sx={{ fontSize: 12, mb: 2 }}>Áreas de Interesse</FormLabel>\r\n                    <FormGroup>\r\n                        <FormControlLabel control={<Checkbox checked={ds} name=\"ds\" onChange={handleCheckBox} />} label=\"Desenvolvimento de Software\" />\r\n                        <FormControlLabel control={<Checkbox checked={es} name=\"es\" onChange={handleCheckBox} />} label=\"Engenharia de Software\" />\r\n                        <FormControlLabel control={<Checkbox checked={mc} name=\"mc\" onChange={handleCheckBox} />} label=\"Matemática Computacional\" />\r\n                        <FormControlLabel control={<Checkbox checked={cg} name=\"cg\" onChange={handleCheckBox} />} label=\"Computação Gráfica\" />\r\n>>>>>>> d2c1fe12ecbeb469b9ed2a1d1a850d040ea27c26\r\n                    </FormGroup>\r\n                </FormControl>\r\n\r\n                <Box sx={{\r\n<<<<<<< HEAD\r\n                    display:\"flex\",\r\n                    justifyContent:\"center\",\r\n                    mt:2\r\n=======\r\n                    display: \"flex\",\r\n                    justifyContent: \"center\",\r\n                    mt: 2\r\n>>>>>>> d2c1fe12ecbeb469b9ed2a1d1a850d040ea27c26\r\n                }}>\r\n                    <Button\r\n                        variant=\"contained\"\r\n                        type=\"submit\"\r\n                    >\r\n                        Cadastrar\r\n                    </Button>\r\n                </Box>\r\n            </Box>\r\n        </>\r\n    )\r\n}\r\nexport default Cadastrar","C:\\Users\\Yuri Lima\\Documents\\PIW\\src\\components\\14MUI\\02CRUD\\professor\\Editar.jsx",["50"],[],"<<<<<<< HEAD\r\nconst Editar = () => {\r\n    return (\r\n        <>\r\n            Editar Professor\r\n=======\r\nimport { Box, Button, Checkbox, FormControl, FormControlLabel, FormGroup, FormLabel, InputLabel, MenuItem, Select, TextField, Typography } from \"@mui/material\"\r\nimport axios from \"axios\"\r\nimport { useEffect } from \"react\"\r\nimport { useState } from \"react\"\r\nimport { useParams, useNavigate } from \"react-router-dom\"\r\n\r\nconst Editar = () => {\r\n\r\n    const [nome, setNome] = useState(\"\")\r\n    const [curso, setCurso] = useState(\"\")\r\n    const [titulacao, setTitulacao] = useState(\"GRAD\")\r\n    const [ai, setAi] = useState({ ds: false, es: false, mc: false, cg: false })\r\n\r\n    const { ds, es, mc, cg } = ai\r\n    const { id } = useParams()\r\n    const navigate = useNavigate()\r\n    \r\n\r\n    /*const professores = [\r\n        { id: 0, nome: \"Gladimir Bavares\", curso: \"DD\", titulacao: \"GRAD\", ai:{ds:true,es:true,mc:false,cg:false} },\r\n        { id: 1, nome: \"Tainara Zaia\", curso: \"DD\", titulacao: \"DOUT\", ai:{ds:true,es:true,mc:false,cg:false} },\r\n        { id: 2, nome: \"Saulo Bitor\", curso: \"ES\", titulacao: \"GRAD\", ai:{ds:true,es:true,mc:false,cg:false} },\r\n        { id: 3, nome: \"Zictor Zarias\", curso: \"CC\", titulacao: \"MEST\", ai:{ds:true,es:true,mc:false,cg:false} },\r\n        { id: 4, nome: \"Angrid Vonteiro\", curso: \"CC\", titulacao: \"DOUT\", ai:{ds:true,es:true,mc:false,cg:false} },\r\n    ]\r\n\r\n    function getProfessorById(id){\r\n        for(let i=0;i<professores.length;i++)\r\n            if(professores[i].id == id){\r\n                return professores[i]\r\n            }\r\n        return null\r\n    }*/\r\n\r\n    useEffect(\r\n        () => {\r\n\r\n            axios.get(`http://localhost:3001/professores/recuperar/${id}`)\r\n                .then(\r\n                    (response) => {\r\n                        setNome(response.data.nome)\r\n                        setCurso(response.data.curso)\r\n                        setTitulacao(response.data.titulacao)\r\n                        setAi(response.data.ai)\r\n                    }\r\n                )\r\n                .catch(error => console.log(error))\r\n\r\n            /*const professor = getProfessorById(id)\r\n            setNome(professor.nome)\r\n            setCurso(professor.curso)\r\n            setTitulacao(professor.titulacao)\r\n            setAi(professor.ai)*/\r\n\r\n        }\r\n        ,\r\n        []\r\n    )\r\n\r\n    function handleSubmit(event) {\r\n        event.preventDefault()\r\n        /*console.log(nome)\r\n        console.log(curso)\r\n        console.log(titulacao)\r\n        console.log(ai)*/\r\n        const professor = {nome,curso,titulacao,ai}\r\n        axios.put(`http://localhost:3001/professores/atualizar/${id}`,professor)\r\n        .then(\r\n            (response) => {\r\n                alert(\"Professor \" + response.data.id + \" atualizado com sucesso!\")\r\n                navigate(\"/listarProfessor\")\r\n            }\r\n        )\r\n        .catch(error=>console.log(error))\r\n    }\r\n\r\n    function handleCheckBox(event) {\r\n        setAi(\r\n            {\r\n                ...ai, //copia todo mundo que estava antes\r\n                [event.target.name]: event.target.checked //modifica apenas a propriedade clicada\r\n            }\r\n        )\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Typography variant=\"h4\" fontWeight=\"bold\">\r\n                Editar Professor {id}\r\n            </Typography>\r\n\r\n            <Box\r\n                component=\"form\"\r\n                onSubmit={handleSubmit}\r\n            >\r\n                <TextField\r\n                    margin=\"normal\"\r\n                    required\r\n                    fullWidth\r\n                    id=\"nome\"\r\n                    label=\"Nome Completo\"\r\n                    name=\"nome\"\r\n                    onChange={(event) => setNome(event.target.value)}\r\n                    value={nome}\r\n                />\r\n                <TextField\r\n                    margin=\"normal\"\r\n                    required\r\n                    fullWidth\r\n                    id=\"curso\"\r\n                    label=\"Curso\"\r\n                    name=\"curso\"\r\n                    onChange={(event) => setCurso(event.target.value)}\r\n                    value={curso}\r\n                />\r\n\r\n                <FormControl sx={{ width: \"100%\", mt: 2 }}>\r\n                    <InputLabel id=\"select-id-label\">Titulação</InputLabel>\r\n                    <Select\r\n                        labelId=\"select-id-label\"\r\n                        label=\"Titulação\"\r\n                        value={titulacao}\r\n                        onChange={(event) => setTitulacao(event.target.value)}\r\n                    >\r\n                        <MenuItem value=\"GRAD\">Graduação</MenuItem>\r\n                        <MenuItem value=\"MEST\">Mestrado</MenuItem>\r\n                        <MenuItem value=\"DOUT\">Doutorado</MenuItem>\r\n                    </Select>\r\n                </FormControl>\r\n\r\n                <FormControl sx={{ mt: 2, ml: 2 }} component=\"fieldset\" variant=\"standard\">\r\n                    <FormLabel component=\"legend\" sx={{ fontSize: 12, mb: 2 }}>Áreas de Interesse</FormLabel>\r\n                    <FormGroup>\r\n                        <FormControlLabel control={<Checkbox checked={ds} name=\"ds\" onChange={handleCheckBox} />} label=\"Desenvolvimento de Software\" />\r\n                        <FormControlLabel control={<Checkbox checked={es} name=\"es\" onChange={handleCheckBox} />} label=\"Engenharia de Software\" />\r\n                        <FormControlLabel control={<Checkbox checked={mc} name=\"mc\" onChange={handleCheckBox} />} label=\"Matemática Computacional\" />\r\n                        <FormControlLabel control={<Checkbox checked={cg} name=\"cg\" onChange={handleCheckBox} />} label=\"Computação Gráfica\" />\r\n                    </FormGroup>\r\n                </FormControl>\r\n\r\n                <Box sx={{\r\n                    display: \"flex\",\r\n                    justifyContent: \"center\",\r\n                    mt: 2\r\n                }}>\r\n                    <Button\r\n                        variant=\"contained\"\r\n                        type=\"submit\"\r\n                        sx={{ mb: 2 }}\r\n                    >\r\n                        Atualizar\r\n                    </Button>\r\n                </Box>\r\n            </Box>\r\n>>>>>>> d2c1fe12ecbeb469b9ed2a1d1a850d040ea27c26\r\n        </>\r\n    )\r\n}\r\nexport default Editar","C:\\Users\\Yuri Lima\\Documents\\PIW\\src\\components\\14MUI\\02CRUD\\professor\\Listar.jsx",["51"],[],{"ruleId":"52","severity":1,"message":"53","line":7,"column":8,"nodeType":"54","messageId":"55","endLine":7,"endColumn":23},{"ruleId":"56","severity":2,"message":"57","line":17,"column":61,"nodeType":"58","messageId":"59","endLine":17,"endColumn":77},{"ruleId":null,"fatal":true,"severity":2,"message":"60","line":9,"column":3,"nodeType":null},{"ruleId":null,"fatal":true,"severity":2,"message":"61","line":2,"column":0,"nodeType":null},{"ruleId":null,"fatal":true,"severity":2,"message":"62","line":1,"column":1,"nodeType":null},{"ruleId":null,"fatal":true,"severity":2,"message":"63","line":13,"column":11,"nodeType":null},"no-unused-vars","'EditarProfessor' is defined but never used.","Identifier","unusedVar","react/jsx-no-undef","'EditarProfesssor' is not defined.","JSXIdentifier","undefined","Parsing error: Unexpected token (9:3)","Parsing error: Unexpected token (2:0)","Parsing error: Unexpected token (1:1)","Parsing error: Identifier 'professores' has already been declared. (13:11)"]